name: Pipeline para automação de testes orange hrm online

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  execute_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v3
        with:
          python-version: 3.12

      - uses: snok/install-poetry@v1
        with:
          version: 1.8.5
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Install Dependencies
        run: poetry install --no-root

      - name: Install Google Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install ./google-chrome-stable_current_amd64.deb

      - name: Install ChromeDriver
        run: |
          CHROME_DRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE)
          wget https://storage.googleapis.com/chrome-for-testing-public/131.0.6778.204/linux64/chromedriver-linux64.zip
          unzip chromedriver_linux64.zip
          sudo mv chromedriver /usr/local/bin/

      - name: Execute Tests
        id: execute_test
        run: poetry run robot -d ./reports .
        continue-on-error: true

      - name: Execute Flaky Tests
        if: steps.execute_test.outcome != 'success'
        run: |
          poetry run robot -d ./reports --rerunfailed ./reports/output.xml --output rerun.xml .
        continue-on-error: true

      - name: Merge Test Reports
        if: steps.execute_test.outcome != 'success'
        run: |
          poetry run rebot -d ./reports --merge ./reports/output.xml ./reports/rerun.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: reports
          path: reports

  generate_report:
    if: always()
    needs: [execute_test]   
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download reports
        uses: actions/download-artifact@v1
        with:
          name: reports

      - name: Send report to commit
        uses: joonvena/robotframework-reporter-action@v2.4
        with:
          gh_access_token: ${{ secrets.GITHUB_TOKEN }}
          sha: ${{ github.sha }}
          pull_request_id: ${{ github.event.number }}